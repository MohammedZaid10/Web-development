Go through all code again and search for links in every code

Go through documentation of codewithharry
Lesson 14:

Intro to CSS:

    a. div is a selector in css and whatever declarations inside div is used the style will get applied to it

=============================================================

Lesson 15:

Inline CSS:

Internal CSS:

External CSS:

=============================================================

selector:

    /* Element selector */
        div {
            background-color: green;
        }

    /* Class elector*/
        .yellow {
            background-color: yellow;
        }

    /* Id selector*/
        #red {
            color: red
        }

    /* Child selector - should be directly child of parent selector */
        div>p {
            color: violet
        }

    /* Descendent selector - can be any child of parent selector, declare without space between parent and child selector */
        div p {
            color: violet
        }

    /* Universal selector */
        * {
            margin: 0;
            padding: 0;
        }
    
    /* Psuedo selector */
        a. a:visited
        b. a:link - unvisited
        c. a:active
        d. a.hover
        e. p:first-child
    </style>

===============================================================================

Lesson 18: CSS box model

Multiple classes can be given to same Element
box-sizing: border-box; - used for giving height or width only to margin and border and not to padding

Conecpt: Margin collapse: When there are two margins overlapping then the biggest of two margins will be taken

===============================================================================

Lesson 19: Fonts, Text and color

Fonts falback Conecept : Font-family
Font-style : italics
Link to know different font families: <!-- https://codepen.io/web-dot-dev/pen/yLojraG -->
Link to know different names of colors: /* https://codepen.io/web-dot-dev/pen/ZELGraM */
Hex color code
read code to revisit all concepts

===============================================================================

Lesson 21: CSS Specificity & cascading

The cascade algorithm has 4 distinct stages.

1. Position and order of appearance: the order in which your CSS rules appear
2. Specificity: an algorithm that determines which CSS selector has the strongest match
    The order of specificity is:
        Inline Style > ID Selector > Class or Attribute Selector > Element Selector > Universal Selector
3. Origin: the order in which CSS appears and where it comes from, whether that is a browser style, CSS from a browser extension, or your authored CSS
4. Importance: some CSS rules are weighted more heavily than others, especially with the !important rule type

Specificity Calculation
To calculate specificity, assign a value to each part of the selector:

Universal Selector: 0
Element selectors and pseudo-elements: 1
Class selectors, attribute selectors, and pseudo-classes: 10
ID selectors: 100
Inline styles: 1000

Quiz:
a.harryclass.rohan-class[href]:hover {
  color: red;
}

To calculate the specificity value of the selector a.harryclass.rohan-class[href]:hover, you can break down its components:
1 (element) + 20 (classes) + 10 (attribute) + 10 (pseudo-class) = 41

========================================================================================

Lesson 22 - CSS Sizing Units - px, rem, em, vh, vw, % & more 

read code properly

========================================================================================

Lesson 23: CSS Display Property

Display in css used for making a block element as inline element

the video also gave simple overview on flex box and how to justify it to centre and also explkained grid functionality in glexbox

========================================================================================

Lesson 24: CSS shadows and outlines

Box shadows:
    SYBTAX : .div-element { box-shadow: 5px 5px 15px 5px #888888; }

text shadows:
    SYNTAX: .text-element { text-shadow: 2px 2px 4px #888888; }

Outlines:
    Similar as borders

    SYNTAX : .button-element:focus { outline: 2px solid blue; }
    
    Differences between Outlines and Borders:
    While both can visually appear similar, outlines differ from borders in a few ways:
        Position: Outlines don't take up space; they're drawn around the element, outside of any border.
        Offset: Using the outline-offset property, you can set the space between an outline and the edge or border of an element.
        Width: Borders can have varying widths on different sides, outlines have a uniform width. (border-radius)
        Rounded Corners: Borders can have rounded corners using border-radius, while outlines generally cannot

========================================================================================

Lesson 25 : Styling Lists using CSS

Read code as we hacve created nav bar for the first time as mostly lists are used inside a nav bar

and we have used many list-styles to design the list inside our nav bar

========================================================================================

Lesson 26 - CSS Overflow Property

Read code as we hacve created nav bar for the first time as mostly lists are used inside a nav bar

========================================================================================

Lesson 26 - CSS Overflow Property

Read code to understand all CSS overflow property

========================================================================================

Lesson 28 - CSS Position property

Set position relative to remove the static position of any box

Navbor scrolling is shown in this video lecture and how it works using sticky, so navbar is continously visible once user scrolls through the page

Concepts :
Static Position
Relative Position
Absolute Position
Fixed Position
Sticky Position
How transform, filter or perpective properties can also make an element appear as positioned - Inerview question and how it inherits its properties from which class

Read code again, read notes and practise code again watch video again to understand later

========================================================================================

Lesson 29 - Excersice 3 - creating a card using HTML and CSS

Done refer both my code and harry's code

========================================================================================

Lesson 30 - CSS variable

Read code properly with all comments
explore what other variables can be given

========================================================================================

Lesson 31 - CSS Media Queries

used for making sites responsive
SYNTAX:
@media not|only mediatype and (expressions) {
            CSS-Code;
            }

========================================================================================

Lesson 34 - CSS Float & Clear

never ever to be used. wasn used in old websites

========================================================================================

Lesson 35 - More on CSS Selectors

Read all codes for all difdferent types of selectors 

========================================================================================

